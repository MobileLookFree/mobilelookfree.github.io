{"version":3,"sources":["components/ui/button/Button.jsx","components/ui/button/index.jsx","components/ui/title/Title.jsx","components/ui/title/index.jsx","components/service/App.jsx","components/service/index.jsx","index.js"],"names":["Button","classes","selectTheme","className","button","onClick","withStyles","body","background","darktheme","color","height","width","borderRadius","fontSize","fontWeight","cursor","outline","border","WebkitTapHighlightColor","transition","transform","Title","title","App","state","setState","prevState","darkModeMediaQuery","window","matchMedia","matches","this","addListener","event","props","wrapper","React","PureComponent","margin","fontFamily","display","flexDirection","justifyContent","alignItems","marginTop","ReactDOM","render","document","getElementById"],"mappings":"wQAUeA,EARA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACzB,OACE,4BAAQC,UAAWF,EAAQG,OAAQC,QAASH,GAA5C,W,QCyBWI,eA1BA,iBAAO,CACpB,UAAW,CACTC,KAAM,CACJC,WAAY,qBAAGC,UAA6B,UAAY,WAG5DL,OAAQ,CACNM,MAAO,qBAAGD,UAA6B,UAAY,SACnDD,WAAY,qBAAGC,UAA6B,QAAU,WACtDE,OAAQ,OACRC,MAAO,QACPC,aAAc,OACdC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,OACTC,OAAQ,OACRC,wBAAyB,gBACzBC,WAAY,OACZ,UAAW,CACPC,UAAW,cACXb,WAAY,qBAAGC,UAA6B,UAAY,gBAKjDH,CAAmBN,GCrBnBsB,EAND,SAAC,GAA4B,IAA1BrB,EAAyB,EAAzBA,QAASQ,EAAgB,EAAhBA,UACxB,OACE,wBAAIN,UAAWF,EAAQsB,OAAQd,EAAY,0BAAkB,6BCKlDH,cANA,CACXiB,MAAO,CACHb,MAAO,qBAAGD,UAA6B,QAAU,aAI1CH,CAAmBgB,G,6jBC4BnBE,E,2MAhCbC,MAAQ,CACNhB,WAAW,G,EAebP,YAAc,WAAO,IACXO,EAAc,EAAKgB,MAAnBhB,UACR,EAAKiB,UAAS,SAACC,GAAD,YAAqBA,EAArB,CAAgClB,WAAYA,Q,mFAdvC,IAAD,OACZmB,EAAqBC,OAAOC,WAAW,gCACzCF,EAAmBG,SACrBC,KAAKN,UAAS,SAACC,GAAD,YAAqBA,EAArB,CAAgClB,WAAW,OAE3DmB,EAAmBK,aAAY,SAACC,GAChCA,EAAMH,QACF,EAAKL,UAAS,SAACC,GAAD,YAAqBA,EAArB,CAAgClB,WAAW,OACzD,EAAKiB,UAAS,SAACC,GAAD,YAAqBA,EAArB,CAAgClB,WAAW,Y,+BASrD,IACAA,EAAcuB,KAAKP,MAAnBhB,UACAR,EAAY+B,KAAKG,MAAjBlC,QACR,OACE,yBAAKE,UAAWF,EAAQmC,SACtB,kBAAC,EAAD,CAAO3B,UAAWA,IAClB,kBAAC,EAAD,CAAQA,UAAWA,EAAWP,YAAa8B,KAAK9B,mB,GA5BtCmC,IAAMC,eCgBThC,cAjBA,CACb,UAAW,CACTC,KAAM,CACJgC,OAAQ,EACRC,WAAY,oJACZpB,WAAY,WAGhBgB,QAAS,CACPK,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,UAAW,UAIAvC,CAAmBkB,GChBlCsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5e80c85f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({ classes, selectTheme }) => {\n  return (\n    <button className={classes.button} onClick={selectTheme}>\n      Switch\n    </button>\n  );\n};\n\nexport default Button;\n","import Button from './Button';\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = () => ({\n  '@global': {\n    body: {\n      background: ({ darktheme }) => (darktheme ? '#242424' : 'white')\n    }\n  },\n  button: {\n    color: ({ darktheme }) => (darktheme ? '#242424' : 'white'),\n    background: ({ darktheme }) => (darktheme ? 'white' : '#242424'),\n    height: '64px',\n    width: '256px',\n    borderRadius: '32px',\n    fontSize: '24px',\n    fontWeight: '600',\n    cursor: 'pointer',\n    outline: 'none',  \n    border: 'none',\n    WebkitTapHighlightColor: 'rgba(0,0,0,0)',\n    transition: '0.5s',\n    '&:hover': {\n        transform: 'scale(1.02)',\n        background: ({ darktheme }) => (darktheme ? '#e0e0e0' : '#303030'),\n    }\n  }\n});\n\nexport default withStyles(styles)(Button);\n","import React from 'react';\n\nconst Title = ({ classes, darktheme }) => {\n  return (\n    <h1 className={classes.title}>{darktheme ? 'Dark theme üåö' : 'Light theme üåù'}</h1>\n  );\n};\n\nexport default Title;","import Title from './Title';\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = {\n    title: {\n        color: ({ darktheme }) => (darktheme ? 'white' : '#242424'),\n      }\n};\n\nexport default withStyles(styles)(Title);\n","import React from 'react';\nimport Button from '../ui/button';\nimport Title from '../ui/title';\n\nclass App extends React.PureComponent {\n  state = {\n    darktheme: false,\n  };\n\n  componentDidMount() {\n    const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    if (darkModeMediaQuery.matches) {\n      this.setState((prevState) => ({ ...prevState, darktheme: true }))\n    }\n    darkModeMediaQuery.addListener((event) => {\n    event.matches\n      ? this.setState((prevState) => ({ ...prevState, darktheme: true }))\n      : this.setState((prevState) => ({ ...prevState, darktheme: false }));\n    });\n  };\n\n  selectTheme = () => {\n    const { darktheme } = this.state;\n    this.setState((prevState) => ({ ...prevState, darktheme: !darktheme }));\n  };\n\n  render() {\n    const { darktheme } = this.state;\n    const { classes } = this.props;\n    return (\n      <div className={classes.wrapper}>\n        <Title darktheme={darktheme} />\n        <Button darktheme={darktheme} selectTheme={this.selectTheme} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import App from './App';\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = {\n  '@global': {\n    body: {\n      margin: 0,\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n      transition: '1000ms'\n    }\n  },\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '200px'\n  },\n};\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/service';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}